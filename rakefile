begin
    require 'json'
    require 'rake/clean'
    require './rakelib/helpers.rb'
rescue LoadError => error
    puts "Import failed (#{error})"
    puts "Please run `bundle install` to bootstrap ruby dependencies"
    exit 1
end

# Build Constants
REPO_ROOT = File.dirname(__FILE__)
ENV_ROOT = File.dirname(REPO_ROOT)
REPORT_DIR = File.join(REPO_ROOT, "reports")
puts "-------------<<< >>>----------------"
puts "rakefile:ENV_ROOT: %s" % ENV_ROOT
puts "rakefile:ARGV: %s" % ARGV.inspect 

# Environment constants
SERVICE_VARIANT = ENV['SERVICE_VARIANT']
# if service variant, honor that;
#  - if not, pass the correct ENV tokens for lms or cms
if not SERVICE_VARIANT
    # ignore any environments passed in, e.s. "rake e1=this"
    clean_args = ARGV.delete_if { |x| /=/.match(x) }
    # join the remainder & consider as word-based elements;
    clean_args = clean_args.join(' ').split(/\W/)
    # if either lms or cms is one of the words, use that env:
    SERVICE_VARIANT = clean_args.include?('lms') ? "lms" : 
	(clean_args.include?('studio') or clean_args.include?('cms')) ? "cms" :
	SERVICE_VARIANT
end
CONFIG_PREFIX = SERVICE_VARIANT ? SERVICE_VARIANT + "." : ""
ENV_FILE = File.join(ENV_ROOT, CONFIG_PREFIX + "env.json")
ENV_TOKENS = File.exists?(ENV_FILE) ? JSON.parse(File.read(ENV_FILE)) : {}
puts "rakefile:SERVICE_VARIANT: %s" % SERVICE_VARIANT
puts "rakefile:ENV_FILE: %s" % ENV_FILE
puts "rakefile:ENV_TOKENS: %s" % ENV_TOKENS
puts "-------------<<< >>>----------------"

task :default => [:test, :pep8, :pylint]
